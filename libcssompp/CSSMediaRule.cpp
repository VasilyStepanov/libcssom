#include <cssompp/CSSMediaRule.hpp>



/**
 * WARNING: DO NOT EDIT!!!
 *
 * Generated by PyWIdl from 'CSSMediaRule.idl'
 */



#include <cssom/CSSMediaRule.h>

#include "checks.hpp"

#include <utility>

namespace cssom {



CSSMediaRule CSSMediaRule::cast(
  const cssom::CSSRule & cssRule)
{
#ifndef NDEBUG
  cssom::checkCast<cssom::CSSRule, cssom::CSSMediaRule>(cssRule);
#endif // NDEBUG
  return static_cast<const cssom::CSSMediaRule &>(cssRule);
}



CSSMediaRule & CSSMediaRule::cast(
  cssom::CSSRule & cssRule)
{
#ifndef NDEBUG
  cssom::checkCast<cssom::CSSRule, cssom::CSSMediaRule>(cssRule);
#endif // NDEBUG
  return static_cast<cssom::CSSMediaRule &>(cssRule);
}



CSSMediaRule::CSSMediaRule() :
  CSSRule()
{}



CSSMediaRule::CSSMediaRule(CSSOM_CSSMediaRule * impl) :
  CSSRule((CSSOM_CSSRule *)impl)
{}



cssom::CSSRuleList CSSMediaRule::cssRules() const {
  return cssom::CSSRuleList(CSSOM_CSSMediaRule_cssRules(reinterpret_cast<CSSOM_CSSMediaRule*>(_impl)));
}



unsigned long CSSMediaRule::insertRule(const char * rule, unsigned long index) {
  return CSSOM_CSSMediaRule_insertRule(reinterpret_cast<CSSOM_CSSMediaRule*>(_impl), rule, index);
}



void CSSMediaRule::deleteRule(unsigned long index) {
  return CSSOM_CSSMediaRule_deleteRule(reinterpret_cast<CSSOM_CSSMediaRule*>(_impl), index);
}



} // cssom
