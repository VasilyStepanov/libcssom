#include <cssompp/CSSStyleDeclarationValue.hpp>



/**
 * WARNING: DO NOT EDIT!!!
 *
 * Generated by PyWIdl from 'CSSStyleDeclarationValue.idl'
 */



#include <cssom/CSSStyleDeclarationValue.h>

#include "checks.hpp"

#include <utility>

namespace cssom {



CSSStyleDeclarationValue::CSSStyleDeclarationValue() :
  _impl(NULL)
{}



CSSStyleDeclarationValue::CSSStyleDeclarationValue(CSSOM_CSSStyleDeclarationValue * impl) :
  _impl(impl)
{
  CSSOM_CSSStyleDeclarationValue_acquire(_impl);
}



CSSStyleDeclarationValue::CSSStyleDeclarationValue(const cssom::CSSStyleDeclarationValue &copy) :
  _impl(copy._impl)
{
  CSSOM_CSSStyleDeclarationValue_acquire(_impl);
}



CSSStyleDeclarationValue::~CSSStyleDeclarationValue() {
  CSSOM_CSSStyleDeclarationValue_release(_impl);
}



cssom::CSSStyleDeclarationValue& CSSStyleDeclarationValue::operator=(
  const cssom::CSSStyleDeclarationValue &rhs)
{
  if (&rhs == this) return *this;

  cssom::CSSStyleDeclarationValue(rhs).swap(*this);

  return *this;
}



bool CSSStyleDeclarationValue::operator==(
  const cssom::CSSStyleDeclarationValue &rhs) const
{
  return _impl == rhs._impl;
}



bool CSSStyleDeclarationValue::isNull() const {
  return _impl == NULL;
}



void CSSStyleDeclarationValue::swap(cssom::CSSStyleDeclarationValue &rhs) {
  std::swap(_impl, rhs._impl);
}



} // cssom
