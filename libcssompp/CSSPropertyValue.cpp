#include <cssompp/CSSPropertyValue.hpp>



/**
 * WARNING: DO NOT EDIT!!!
 *
 * Generated by PyWIdl from 'CSSPropertyValue.idl'
 */



#include <cssom/CSSPropertyValue.h>

#include "checks.hpp"

#include <utility>

namespace cssom {



CSSPropertyValue::CSSPropertyValue() :
  _impl(NULL)
{}



CSSPropertyValue::CSSPropertyValue(CSSOM_CSSPropertyValue * impl) :
  _impl(impl)
{
  CSSOM_CSSPropertyValue_acquire(_impl);
}



CSSPropertyValue::CSSPropertyValue(const cssom::CSSPropertyValue &copy) :
  _impl(copy._impl)
{
  CSSOM_CSSPropertyValue_acquire(_impl);
}



CSSPropertyValue::~CSSPropertyValue() {
  CSSOM_CSSPropertyValue_release(_impl);
}



cssom::CSSPropertyValue& CSSPropertyValue::operator=(
  const cssom::CSSPropertyValue &rhs)
{
  if (&rhs == this) return *this;

  cssom::CSSPropertyValue(rhs).swap(*this);

  return *this;
}



bool CSSPropertyValue::operator==(
  const cssom::CSSPropertyValue &rhs) const
{
  return _impl == rhs._impl;
}



bool CSSPropertyValue::isNull() const {
  return _impl == NULL;
}



void CSSPropertyValue::swap(cssom::CSSPropertyValue &rhs) {
  std::swap(_impl, rhs._impl);
}



const char * CSSPropertyValue::cssText() const {
  return CSSOM_CSSPropertyValue_cssText(_impl);
}



void CSSPropertyValue::setCSSText(const char * cssText) {
  CSSOM_CSSPropertyValue_setCSSText(_impl, cssText);
}



} // cssom
