#ifndef CSSOM_CSS_STYLE_DECLARATION_H
#define CSSOM_CSS_STYLE_DECLARATION_H



/**
 * WARNING: DO NOT EDIT!!!
 *
 * Generated by PyWIdl from 'CSSStyleDeclaration.idl'
 */



#include <cssom/typedefs.h>

#ifdef __cplusplus
extern "C" {
#endif



void CSSOM_CSSStyleDeclaration_acquire(
  CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_release(
  CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



const char * CSSOM_CSSStyleDeclaration_cssText(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setCSSText(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * cssText);



unsigned long CSSOM_CSSStyleDeclaration_length(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



const char * CSSOM_CSSStyleDeclaration_item(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, unsigned long index);



const char * CSSOM_CSSStyleDeclaration_getPropertyValue(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * property);



const char * CSSOM_CSSStyleDeclaration_getPropertyPriority(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * property);



void CSSOM_CSSStyleDeclaration_setProperty(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * property, const char * value);



void CSSOM_CSSStyleDeclaration_setPropertyEx(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * property, const char * value, const char * priority);



const char * CSSOM_CSSStyleDeclaration_removeProperty(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * property);



CSSOM_CSSStyleDeclarationValue* CSSOM_CSSStyleDeclaration_values(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



CSSOM_CSSRule* CSSOM_CSSStyleDeclaration_parentRule(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



const char * CSSOM_CSSStyleDeclaration_azimuth(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setAzimuth(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * azimuth);



const char * CSSOM_CSSStyleDeclaration_background(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBackground(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * background);



const char * CSSOM_CSSStyleDeclaration_backgroundAttachment(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBackgroundAttachment(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * backgroundAttachment);



const char * CSSOM_CSSStyleDeclaration_backgroundColor(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBackgroundColor(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * backgroundColor);



const char * CSSOM_CSSStyleDeclaration_backgroundImage(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBackgroundImage(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * backgroundImage);



const char * CSSOM_CSSStyleDeclaration_backgroundPosition(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBackgroundPosition(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * backgroundPosition);



const char * CSSOM_CSSStyleDeclaration_backgroundRepeat(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBackgroundRepeat(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * backgroundRepeat);



const char * CSSOM_CSSStyleDeclaration_borderCollapse(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderCollapse(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderCollapse);



const char * CSSOM_CSSStyleDeclaration_borderColor(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderColor(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderColor);



const char * CSSOM_CSSStyleDeclaration_borderSpacing(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderSpacing(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderSpacing);



const char * CSSOM_CSSStyleDeclaration_borderTopColor(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderTopColor(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderTopColor);



const char * CSSOM_CSSStyleDeclaration_borderRightColor(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderRightColor(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderRightColor);



const char * CSSOM_CSSStyleDeclaration_borderBottomColor(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderBottomColor(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderBottomColor);



const char * CSSOM_CSSStyleDeclaration_borderLeftColor(const CSSOM_CSSStyleDeclaration * cssStyleDeclaration);



void CSSOM_CSSStyleDeclaration_setBorderLeftColor(CSSOM_CSSStyleDeclaration * cssStyleDeclaration, const char * borderLeftColor);



#ifdef __cplusplus
}
#endif

#endif
